% Generated by roxygen2 (4.0.1): do not edit by hand
\name{est}
\alias{est}
\title{Estimation function}
\usage{
est(t, data, model.class, nMCMC)
}
\arguments{
\item{t}{vector of time points}

\item{data}{vector or list or matrix of observation variables}

\item{model.class}{class of the respective model including all required information, see function set.to.class}

\item{nMCMC}{length of Markov chain}
}
\value{
estimation class object
}
\description{
Bayesian estimation of the parameter of a stochastic process
  \eqn{dY_t = b(\phi,t,Y_t)dt + s(\gamma,t,Y_t)dW_t + h(\eta,t,Y_t)dN_t}.
}
\examples{
\dontrun{
cl_jd <- set.to.class("jumpDiffusion", parameter = list(theta = 0.1, phi = 0.05, gamma2 = 0.1, xi = 10))
t <- seq(0, 1, by = 0.01)
data <- drawData(t, cl_jd, start = 0.5, plot.series = TRUE)
est_jd <- est(t, data, cl_jd, 1000)
plot(est_jd)
est_jd_hidden <- est(t, data$Y, model.class=cl_jd, 1000)
plot(est_jd_hidden)

cl_merton <- set.to.class("Merton", parameter = list(thetaT = 0.1, phi = 0.05, gamma2 = 0.1, xi = 10))
t <- seq(0, 1, by = 0.01)
data <- drawData(t, cl_merton, start = 0.5, plot.series = TRUE)
est_merton <- est(t, data, cl_merton, 1000)
plot(est_merton)
est_merton_hidden <- est(t, data$Y, model.class = cl_merton, 1000)
plot(est_merton_hidden)

cl_diff <- set.to.class("Diffusion", parameter=list(phi = 0.5, gamma2 = 0.01))
t <- seq(0, 1, by = 0.01)
data <- drawData(t, cl_diff, start = 0.5, plot.series = TRUE)
est_diff <- est(t, data, cl_diff, 1000)
plot(est_diff)

mu <- 0.5; Omega <- 0.1; phi <- matrix(rnorm(20, mu, sqrt(Omega)))
cl_mixdiff <- set.to.class("mixedDiffusion", parameter = list(phi = phi, mu = mu, Omega = Omega, gamma2 = 0.01))
t <- seq(0, 1, by = 0.01)
data <- drawData(t, cl_mixdiff, start = 0.5, plot.series = TRUE)
est_mixdiff <- est(t, data, cl_mixdiff, 1000)
plot(est_mixdiff)

cl_hiddiff <- set.to.class("hiddenDiffusion", parameter = list(phi = 5, gamma2 = 1, sigma2 = 0.01))
t <- seq(0, 1, by = 0.01)
data <- drawData(t, cl_hiddiff, start = 0.5, plot.series = TRUE)
est_hiddiff <- est(t, data$Z, cl_hiddiff, 1000)
plot(est_hiddiff)

mu <- 5; Omega <- 0.5; phi <- matrix(rnorm(20, mu, sqrt(Omega))); y0 <- 0.5
cl_hidmixdiff <- set.to.class("hiddenmixedDiffusion", y0.fun = function(phi, t) y0, parameter = list(phi = phi, mu = mu, Omega = Omega, gamma2 = 1, sigma2 = 0.01))
t <- seq(0, 1, by = 0.01)
data <- drawData(t, cl_hidmixdiff, start = y0, plot.series = TRUE)
est_hidmixdiff <- est(t, data$Z, cl_hidmixdiff, 1000)
plot(est_hidmixdiff)

t <- seq(0,1, by = 0.01)
cl_regNHPP <- set.to.class("reg_hiddenNHPP", fun = function(t, N, theta) theta[1]*t + theta[2]*N, parameter = list(theta = c(1,2), gamma2 = 0.1, xi = 10))
data <- drawData(t, cl_regNHPP, plot.series = TRUE)
est_regNHPP <- est(t, data, cl_regNHPP, 1000)
plot(est_regNHPP)

est_hidregNHPP <- est(t, data$Y, cl_regNHPP, 1000)
plot(est_hidregNHPP)


t <- seq(0,1, by = 0.01)
cl_NHPP <- set.to.class("NHPP", parameter = list(xi = 10))
data <- drawData(t, cl_NHPP, plot.series = TRUE)
est_NHPP <- est(t, data$N, cl_NHPP, 1000)
plot(est_NHPP)
}
}

